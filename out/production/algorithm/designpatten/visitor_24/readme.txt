
   访问者模式：
   
   
       一、说明：
   
      1、定义
      
                     表示一个作用于某对象结构中的各元素的操作。它使你可以在不改变各元素的类的前提下定义作用于这些元素的新操作
      
      2、类结构
      
         Visitor:访问者接口，为所有的访问者对象生命一个visit方法，用来代表为对象结构添加的功能，理论可以代替任意功能
         ConcreteVisition:具体访问者对象，实现要真正被添加到对象结构中的功能
         Element:抽象的元素对象，对象结构的顶层接口，定义接收访问的操作
         ConcreteElement:具体的元素对象，对象结构中具体的对象，也就是被访问的对象，通常会回调访问者真实功能
                                                                   同时开放自身的数据提供访问者使用
      
      3、访问者对象流程：
      
        a、首先定义一个接口，代表要新加入的功能，为了通用，就定义一个通用的功能方法代表新加入的功能：Visitor接口
        b、在对象结构上添加一个方法，作为通用的功能方法，回调传入具体的实现功能的对象 
        c、在对象结构的具体实现对象中，实现这个方法，回调传入具体的实现新功能的对象，相当于调用新功能了
           ，
      4、访问者功能
      
                       能够给一系列的对象透明的添加新功能
  
      5、调用通路
      
                        访问者能够实现“为一系列对象透明添加新功能”，注意是透明的，也就是这一系列对象是不知道添加新功能的
                        最重要的是依靠通用方法，访问者说这边要访问，就提供一个访问的方法，如visit方法；
                        而对象那边说，好的，我接收你的访问，提供一个接收访问的方法，如accept方法，这两个方法并不代表具体的功能，只是形成一个调用的通路                             
  
      6、两次分发技术
      
                                  在访问者模式中，当客户端调用ObjectStructure的时候，会遍历ObjectStrucutre中所有的元素，
                        调用这些元素的accept方法，让这些元素接收访问，这是请求的第一次分发
                                 在具体元素中实现accept方法时候，会回调访问者的visit方法，请求被分发给访问者来进行处理，
                       真正实现功能的是访问者的visit方法，这是第二次分发。            
      
      7、为何不在父类中回调实现visit方法
      
                       我们是在企业用户对象和个人客户对象中实现accept方法的，但是传入的是this,所以不能放在父类里面了，这样会没有子类的数据
    
      8、 操作组合对象结构
      
                            对于使用组合模式构建的组合对象结构，对外有一个统一的外观，要想添加新的功能，则需要修改所有的子类。为了更好的扩充，可以
                       结合访问者模式和组合模式一块用                 
      
                       具体见示例 test2
   
      9、谁负责遍历所有的元素对象
      
                       在访问者模式重，为了能够访问到对象结构中的每个对象，所以使用了ObjectStructure对象
   
      10、访问者模式优缺点：
      
                      优点：   好的扩展性、好的复用性、分离无关行为
                      缺点：破坏封装性                
   
      11、访问者模式本质：
      
                      预留通路、回调实现
                      
      12、何时选用该模式：
         
                      如果一个类 的结构很少变动，，但是经常需要给对象结构中的元素对象定义新的操作               
                     如果对一个对象结构的各个元素进行不同的而且不相关的操作，避免这些操作使得这个类
      
               
   
       二、示例：  
    
    1、例子：
      
                     有这样一个应用：扩展客户管理的功能。既然是扩展，那肯定已经存在  一定的功能了。
                     现有的功能：公司的客户分为两大类：一类是企业客户，另一类是个人客户，功能非常简单，就是能让客户提出服务申请
              
                     具体实现如：example实例   
              
                     现在增加一个功能：   
                  1、客户对公司产品的偏好分析：针对企业客户和个人客户有不同的分析策略，
                                                                                                       主要根据以往的购买历史，潜在购买意向分析，
                                                                                                        对于企业用户还要加上客户所在行业的发展趋势进行分析 
                           
                  2、客户价值分析：针对企业客户和个人客户，有不同的分析策略，
                                                                        主要根据购买的金额大小，购买的产品和服务的多少，购买频率进行分析                 
                       还有潜在的功能：     
                                   针对不同的客户进行需求调查，针对不同的客户进行满意度分析；客户消费预期分析等     
                             
                       不用模式的解决方案见：example
                 
     2、存在的问题
     
         a、在个人客户和企业客户中都实现了服务请求、进行产品偏好分析、进行客户价值分析等功能
                                也就是说这些功能实现代码混合在一个类中；而且相同的功能分散到不同的类中实现。导致整个系统难以理解             
                 
         b、采用这种方式，如果要给客户扩展新的功能，都需要改动企业客户的类和个人客户的类，当然也可以扩展子类
                                但是会增加类的层级        
                 
                    那么有没有办法，在不改变客户对象结构中各元素的前提下，为这些类定义新的功能？也就是不改变企业客户和个人客户，
                    就能为企业客户和个人客户定义新的功能？
                    
                         可以使用装饰者模式吗  ？不行，因为装饰者模式是对先用功能的封装或者增强。并不是在现有功能上增加新的功能、              
                    
                         这个时候访问者模式就出现了         
                 
                 
                 
                 
                                                                       