
   模板方法
   
        一、说明：
      1、定义： 
          
                      定义一个操作中算法的骨架，将一些步骤延迟到子类当中。模板方法使得子类可以不改变一个算法的结构即可重新定义改算法的某些特定步骤
     
      2、关键点：
       
                      将不变的部分抽成算法骨架，变的地方交给子类去实现
     
      3、好莱坞法则：“不要找我们，我们会联系你”
        
                      反向控制，一般思路是子类找父类，但是在模板方法是父类来找子类。
                                            
      4、模板写法
      
                       模板方法，算法骨架
                      具体操作：如果不需要给子类提供，则可以为private，如果需要提供，但不希望被覆写，则可以为protect final                
                      
     
     5、java回调和模板方法
     
                           使用java回调，可以传入接口，模板方法使用接口中的方法，相对于之前要继承一个类，显得更加灵活。
          java排序就是这种方式
          
          
     6、java排序实例： Collections.sort(list,c);
     
                    排序流程也是一样的：     
           1、将列表转换成数组
           2、使用Arrays的sort方法对数组进行排序，传入Compatator接口的实例
           3、把排序好的数组中数据设置回到原来的列表对象中         
     
     
        二、示例：
     
       1、一个登陆系统有多个登陆控制，比如普通用户可以登陆前台，而工作人员可以登陆后台。
                          针对这两种登陆操作，可以直接使用不同的登陆页面区分开。
     
                        功能描述：
                             普通用户登陆：    
            1、前台页面：用户输入用户名和密码，提交登陆请求，让系统进行登陆控制
            2、后台：从数据库获取登录人员信息
            3、后台：判断从前台传递过来的登录数据和数据库已有数据是否匹配
            4、前台Action:如果匹配跳转到首页，如果不匹配则跳转到登录页，并显示错误信息                    
          
                             管理员用户登陆：    
            1、前台页面：用户输入用户名和密码，提交登陆请求，让系统进行登陆控制
            2、后台：从数据库获取登录人员信息
            3、后台：把前台传递过来数据进行加密，得到加密数据
            3、后台：判断从前台传递过来的仅供加密的登录数据和数据库已有数据是否匹配
            4、前台Action:如果匹配跳转到首页，如果不匹配则跳转到登录页，并显示错误信息                    
           
           
                         由此可知上面两个流程基本一样，可以使用模板方法，定义算法骨架   
           
           
           
           
           
           
           
           
                                      